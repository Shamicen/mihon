import kotlin.collections.List;
import kotlin.String;

CREATE TABLE local_manga (
    url TEXT NOT NULL PRIMARY KEY,
    artist TEXT,
    author TEXT,
    description TEXT,
    genre TEXT AS List<String>,
    title TEXT NOT NULL,
    status INTEGER NOT NULL,
    thumbnail_url TEXT,
    dir_last_modified INTEGER NOT NULL DEFAULT 0
);

insertOrReplace:
INSERT OR REPLACE INTO local_manga(url, artist, author, description, genre, title, status, thumbnail_url, dir_last_modified)
VALUES (:url, :artist, :author, :description, :genre, :title, :status, :thumbnailUrl,:dirLastModified);

getMangaByUrl:
SELECT *
FROM local_manga
WHERE url = :url;

getAllManga:
SELECT *
FROM local_manga;

getAllMangaOrderedByTitleAsc:
SELECT *
FROM local_manga
ORDER BY title ASC;

getAllMangaOrderedByTitleDesc:
SELECT *
FROM local_manga
ORDER BY title DESC;

getAllMangaOrderedByDateAsc:
SELECT *
FROM local_manga
ORDER BY dir_last_modified ASC;

getAllMangaOrderedByDateDesc:
SELECT *
FROM local_manga
ORDER BY dir_last_modified DESC;

getFilterValues:
WITH RECURSIVE author_artist_genre_split(item_author, rest_author, item_artist, rest_artist, item_genre, rest_genre) AS (
  SELECT
    '',
    author || ',',
    '',
    artist || ',',
    '',
    genre || ','
  FROM
    local_manga
  UNION ALL
  SELECT
    TRIM(substr(rest_author, 0, instr(rest_author, ','))),
    substr(rest_author, instr(rest_author, ',') + 1),
    TRIM(substr(rest_artist, 0, instr(rest_artist, ','))),
    substr(rest_artist, instr(rest_artist, ',') + 1),
    TRIM(substr(rest_genre, 0, instr(rest_genre, ','))),
    substr(rest_genre, instr(rest_genre, ',') + 1)
  FROM
    author_artist_genre_split
  WHERE
    rest_author <> '' OR rest_artist <> '' OR rest_genre <> ''
)
SELECT DISTINCT
  item_author AS author_item,
  item_artist AS artist_item,
  item_genre AS genre_item
FROM
  author_artist_genre_split
WHERE
  item_author <> '' OR item_artist <> '' OR item_genre <> ''
ORDER BY
  author_item, artist_item, genre_item;

updateThumbnailUrl:
UPDATE local_manga
SET thumbnail_url = :thumbnailUrl
WHERE url = :url;

deleteManga:
DELETE
FROM local_manga
WHERE  url = :url;
